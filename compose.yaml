services:
  web:
    # The Django web service
    build: .
    ports:
      - "8000:80"  # Map Django's internal port 80 to 8000 on the host
    command: python manage.py runserver 0.0.0.0:80
    networks:
      - djangocmsnet
    env_file: .env-local
    # Optional: If you need to re-enable volumes for development, limit the scope
    # volumes:
    #   - ./backend:/app

  database_default:
    # PostgreSQL database service
    image: postgres:15-alpine
    ports:
      - "${DB_PORT:-5432}:5432/tcp"  # Map the database port
    environment:
      POSTGRES_DB: "db"
      POSTGRES_PASSWORD: "password"
      POSTGRES_HOST_AUTH_METHOD: "trust"
      SERVICE_MANAGER: "fsm-postgres"
    networks:
      - djangocmsnet
    volumes:
      - postgres-data:/var/lib/postgresql/data/

  frontend:
    build: ./frontend
    ports:
      - "3000:3000"  # Map Next.js development server to port 3000
    volumes:
      - ./frontend/components:/app/components
      - ./frontend/pages:/app/pages
      - ./frontend/public:/app/public
      - ./frontend/src:/app/src
      - ./frontend/styles:/app/styles
      - ./frontend/utils:/app/utils
    networks:
      - djangocmsnet  # Connect to the shared network
    environment:
      - CHOKIDAR_USEPOLLING=true  # Required for file changes in Docker
      - HOST=0.0.0.0  # Bind Next.js to all interfaces

networks:
  djangocmsnet:  # Define the shared network

volumes:
  postgres-data:  # Define the volume for the database
